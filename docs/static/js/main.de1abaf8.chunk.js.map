{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GitElement.js","components/GifColections.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","_ref","setCategorias","_useState","useState","_useState2","Object","slicedToArray","inputCategoria","setInputCategoria","react_default","a","createElement","onSubmit","e","preventDefault","trim","length","cats","concat","toConsumableArray","type","value","onChange","target","getGifs","asyncToGenerator","regenerator_default","mark","_callee","categoria","url","resp","_yield$resp$json","data","gifs","wrap","_context","prev","next","encodeURI","fetch","sent","json","map","_ref2","id","title","images","downsized_medium","abrupt","stop","_x","apply","this","arguments","GitElement","className","src","alt","GifColections","_useFetchGifs","loading","imagenes","setImagenes","useEffect","then","imgs","useFetchGifs","Fragment","img","GitElement_GitElement","assign","key","GifExpertApp","categorias","AddCategory_AddCategory","GifColections_GifColections","root","document","querySelector","ReactDOM","render","src_GifExpertApp"],"mappings":"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","file":"static/js/main.de1abaf8.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputCategoria, setInputCategoria] = useState('');\r\n     \r\n    const handleInputChange=(e)=>{\r\n        setInputCategoria(e.target.value);\r\n    };\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputCategoria.trim().length>2){\r\n            setCategorias(cats=>[inputCategoria,...cats]);\r\n            setInputCategoria('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <input\r\n            type=\"text\"\r\n            value={inputCategoria}\r\n            onChange={handleInputChange}\r\n           />\r\n        </form>\r\n    )\r\n\r\n\r\n};\r\n\r\n\r\nAddCategory.propTypes={\r\n\r\n    setCategorias:PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (categoria) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=6&q=${ encodeURI(categoria) }&api_key=5jBsmHQl27ewC98E2bwX1CZGrHBBGmiT`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(({ id, title, images: { downsized_medium: { url } } }) => {\r\n\r\n        return {\r\n            id,\r\n            title,\r\n            url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react';\r\n\r\nexport const GitElement = ({ id, title,url }) => {\r\n   // console.log(url);\r\n    return <div className='cardGif animate__animated animate__rubberBand'>\r\n    <img src={url} alt={title}/>\r\n    <p>{title}</p>\r\n    </div>;\r\n};\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GitElement } from './GitElement';\r\n\r\nexport const GifColections = ({ categoria }) => {\r\n\r\n    const { data:imagenes, loading } = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__pulse'>{categoria}</h3>\r\n\r\n            {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\r\n\r\n            {<div className='card-colections'>\r\n\r\n                {\r\n                    imagenes.map(img => {\r\n                        return <GitElement\r\n                            key={img.id}\r\n                            // img={img}\r\n                            {...img}\r\n                        />\r\n                    })\r\n                }\r\n            </div>\r\n            }\r\n        </>\r\n\r\n    );\r\n};\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n\r\n    const [imagenes, setImagenes] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria).then(\r\n            imgs =>{\r\n                    setImagenes({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })      \r\n            })\r\n    }, [categoria])\r\n\r\n\r\n    return imagenes;\r\n};\r\n","import React,{useState} from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifColections } from \"./components/GifColections\";\r\n//import PropTypes from \"prop-types\";\r\nimport 'animate.css';\r\n\r\nconst GifExpertApp=()=>{\r\n\r\n   // const categorias=['Sipderman','Iron Man','Capitan Am√©rica'];\r\n    const [categorias, setCategorias] = useState(['Hulk']);\r\n    return(\r\n        <>\r\n        <h2>GitExpertApp</h2>\r\n        <hr/>\r\n        <AddCategory setCategorias={setCategorias} />\r\n        <ol>\r\n            {\r\n                categorias.map(categoria=>(\r\n                    <GifColections\r\n                    key={categoria}\r\n                    categoria={categoria} />\r\n                ))\r\n                  \r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nconst root=document.querySelector('#root');\nReactDOM.render(<GifExpertApp />,root);\n\n\n"],"sourceRoot":""}